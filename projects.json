[
    {
        "name": "<span class=highlightWordProj>Peep - Twitter Clone</span>",
        "description": "<span class=textColor>Peep is a Twitter clone that integrates features like posting, liking, and following, along with a secure login system and notification management. User profiles can be customized with Bio, profile and cover images, and navigation options of Light and Dark modes. The front-end is developed using React and Next.js, styled with CSS and Tailwind, and strongly typed using TypeScript. The back-end is managed by Node.js, and data storage is handled by MongoDB. Authentication is facilitated through NextAuth, and the application is deployed on AWS.</span>",
        "builtWith": "<span class=highlightWordProj>React, Next.js, CSS, Tailwind, TypeScript, Node.js, MongoDB, NextAuth, AWS</span>",
        "image": "https://raw.githubusercontent.com/F-i-l-i-p-e/PersonalPage/main/images/Peep.png",
        "button": {
            "label": "View live on AWS",
            "link": "http://3.18.214.64:3000"
        }
    },
    {
        "name": "<span class=highlightWordProj>Game List Webapp</span>",
        "description": "<span class=textColor>The Game List Webapp is a web-based platform designed to showcase information about various games in a structured format. Developed using ASP.NET Core MVC, it adheres to the MVC pattern, allowing creation and management of models, services, and controllers. It also emphasizes data retrieval and manipulation in JSON format.</span>",
        "builtWith": "<span class=highlightWordProj>ASP.NET Core MVC, MVC pattern, JSON</span>",
        "image": "https://raw.githubusercontent.com/F-i-l-i-p-e/GameTop10.Website-Asp-/main/Print%20GameListApp.jpg",
        "button": {
            "label": "Repository on GitHub",
            "link": "https://github.com/F-i-l-i-p-e/GameTop10.Website-Asp-"
        }
    },
    {
        "name": "<span class=highlightWordProj>Plant Encyclopedia</span>",
        "description": "<span class=textColor>The Plant Encyclopedia is a web application that dynamically displays plant data from a custom JSON source. Developed using HTML and styled with CSS and Bootstrap, styled with a card style offering great look and easy organization. JavaScript code fetches data using the Fetch API and dynamically updates the DOM to present the retrieved data.</span>",
        "builtWith": "<span class=highlightWordProj> HTML, CSS, Bootstrap, JavaScript, JSON, Fetch API, DOM </span>",
        "image": "https://raw.githubusercontent.com/F-i-l-i-p-e/PersonalPage/main/images/plantApp.jpg",
        "button": {
            "label": "View live on GitHub",
            "link": "https://f-i-l-i-p-e.github.io/PlantAPI/"
        }
    },
    {
        "name": "<span class=highlightWordProj>Document and Invoice App</span>",
        "description": "<span class=textColor>The Document and Invoice App is a Python toolset designed for automating invoice document creation and analysis. It leverages the docx library for Word operations and the openpyxl library for Excel tasks. The application employs regular expressions and random data generation techniques to simulate real-world invoice creation and processing.</span>",
        "builtWith": "<span class=highlightWordProj>Python, docx library, openpyxl, Word, Excel, Regular Expressions</span>",
        "image": "https://raw.githubusercontent.com/F-i-l-i-p-e/PythonDocAndInvoice/main/InvoceRecordPython.png",
        "button": {
            "label": "Repository on GitHub",
            "link": "https://github.com/F-i-l-i-p-e/PythonDocAndInvoice"
        }
    }
]